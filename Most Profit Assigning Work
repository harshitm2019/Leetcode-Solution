class Solution {
    public int maxProfitAssignment(int[] d, int[] p, int[] w){

     Arrays.sort(w);

     HashMap<Integer,Integer> map = new HashMap<>();

    for(int i = 0 ;i < d.length;i++){

    if(!map.containsKey(d[i])) map.put(d[i],p[i]);
    else {
      if(map.get(d[i]) < p[i]) map.put(d[i],p[i]);
    }

    }

    Arrays.sort(d);
 
    int res = 0 , max = 0;
    int i = 0 , j = 0 ;

     while(i < w.length){

             int helper = j;
      
             while(j < d.length){

                   if(w[i] >= d[j]) max = Math.max(max,map.get(d[j]));
                   if(w[i] <= d[j]) break;
                   j++;
             }
            res += max;
            i++;
            if(j == d.length && i != w.length) j--;
     }

     return res;

    }
}
